This is the INSTALL file for RXTX. 

If, while following the instructions, you find this file unclear or incorrect 
please make a note and email the details to cardon dot rodolphe at gmail dot com.

BUILD PROCEDURE

1. INTRODUCTION

RXTX has two parts: 
- the java code
- the C code for the DLL

2. BUILD THE JAVA CODE

The java code is contained in the java folder.
Uses JDK 1.8 in order to build the gnu.io package.
This project was built with Netbeans and ANT, but you can use any other tool. 
The java code is also built by NMAKE when building the C code (see below).

3. BUILD THE C CODE (DLL)

3.1 REQUIREMENTS

- Windows 10 machine
- Microsoft Visual Studio 2019 (or Build Tools for Visual Studio 2019)
- Windows 10 SDK
- JDK 1.8

3.2 HOW TO BUILD

- Edit the path to JAVA_HOME in Makefile.msvc. Make sure that variable JAVA_HOME points to the place where your Java SDK is located.
- To build the 32-bit DLL:
  - Open x86 Native tools Command Prompt for VS 2019
  - Execute these commands:
    mkdir build
    cd build
    copy ..\Makefile.msvc .\Makefile
    nmake

-  To build the 64-bit DLL: 
  - Open x64 Native tools Command Prompt for VS 2019
  - Execute these commands:
    mkdir build64
    cd build64
    copy ..\Makefile.msvc .\Makefile
    nmake

The nmake without parameters with build both the DLL and the JAR file.
To build only the DLL libray, use
  nmake rxtxSerial.dll

If you wish to make the version with debug info then do something 
like this
  nmake rxtxSerial.dll DEBUG_INFO=1

To remove all objects, DLL and other working files, execute: 
  nmake clean 

If you want to script the build process, you can use vcvarsall.bat  https://docs.microsoft.com/en-us/cpp/build/building-on-the-command-line?view=msvc-160
   vcvarsall.bat  [architecture] [platform_type] [winsdk_version] [-vcvars_ver=vcversion]

For example, to build 32-bit DLL:
   CALL "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" x86
   copy ..\Makefile.msvc .\Makefile
   nmake
   pause

See also
https://docs.microsoft.com/en-us/cpp/build/reference/nmake-reference?view=msvc-160

4. INSTALL (in JDK or your own project)

To install the DLL and JAR in the JDK, execute (as administrator):
  nmake install

You can also modify the Makefile so that the install target copy the files to your project directory.

4.1 JNLPAppletLauncher

See https://jogamp.org/applet-launcher/www/
If you deploy an applet using JNLPAppletLauncher, the following DLL names must be used:
- 32-bit: rxtxSerial.dll 
- 64-bit: rxtxSerial64.dll 
Make sure to rename the DLL for the 64-bit version.
